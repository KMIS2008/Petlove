{"version":3,"file":"static/js/813.a00f1fe6.chunk.js","mappings":"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","sources":["components/NoticesItem/NoticeItrm.styled.js","components/NoticesItem/NoticesItem.js","components/NoticesList/NoticeList.styled.js","components/NoticesList/NoticesList.js","Pages/Notices/Notices.js","components/Pagination/Pagination.styled.js","components/Pagination/Pagination.js","components/SearchField/SearchField.styled.js","components/SearchField/SearchField.js","components/Title/title.styled.js","components/Title/Title.js","redux/selects.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ContainerItem = styled.li`\npadding: 20px;\n\n@media (min-width: 768px) {\n    width: 100%; \n    /* max-width: 342px;  */\n    margin: 0 auto; \n}\n\n/* @media (min-width: 1280px) {\n    max-width: 363px\n} */\n`\nexport const Img = styled.img`\nborder-radius: 16px;\nmargin-bottom: 20px;\n`\n\nexport const Title = styled.h3`\nfont-family: Manrope;\nfont-size: 16px;\nfont-weight: 700;\nline-height: 1,25;\ncolor: #2B2B2A;\n`\n\nexport const Rating = styled.p`\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29;\n`\n\nexport const ContainerList= styled.ul`\ndisplay: flex;\njustify-content: space-between;\nlist-style: none;\nmargin-bottom: 14px;\n`\n\nexport const ContainerTitle= styled.div`\ndisplay: flex;\njustify-content: space-between;\nmargin-bottom: 5px;\n`\n\nexport const ContainerPopulate= styled.div`\ndisplay: flex;\ngap:2px;\njustify-content: center;\nalign-items: center;\n`\n\nexport const TitleTable= styled.p`\nfont-family: Manrope;\nfont-size: 10px;\nfont-weight: 500;\nline-height: 1,4;\nletter-spacing: -0.02em;\ncolor: #26262680;\n`\n\nexport const TextTable= styled.p`\nfont-family: Manrope;\nfont-size: 12px;\nfont-weight: 500;\nline-height: 1,4;\nletter-spacing: -0.02em;\ncolor: #262626;\n`\n\nexport const Comment= styled.p`\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29;\nletter-spacing: -0.02em;\n\ncolor: #2B2B2A;\n`\n\nexport const ContainerButton= styled.div`\ndisplay: flex;\njustify-content: space-between;\n`\n\nexport const Button = styled.button`\nwidth: 231px;\nheight: 46px;\n\nborder-radius: 30px ;\nbackground: #F6B83D;\n\nbackground: ${p => p.theme.colors.yellow};\n\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29px;\nletter-spacing: -0.03em;\ntext-align: center;\nbackground: ${p=>p.theme.colors.white};\n`","import sprite from '../../images/sprite.svg';\nimport {Button,Title, Img, ContainerList, ContainerTitle, ContainerPopulate,\n        Rating, TitleTable, ContainerButton, ContainerItem\n} from './NoticeItrm.styled';\n \nexport const NoticesItem=({notice})=>{\n\n    const {imgURL ,title, popularity, comment, name, birthday, species, category}=notice;\n\n    return(\n        <ContainerItem>\n            <Img src= {imgURL} alt={title}/>\n           <ContainerTitle>\n              <Title>{title}</Title>\n              <ContainerPopulate>\n                 <svg width={16} height={16}>\n                    <use xlinkHref={sprite + '#icon-star'} />\n                 </svg>      \n                 <Rating>{popularity}</Rating>          \n              </ContainerPopulate>\n            </ContainerTitle>  \n\n            <ContainerList>\n\n                <li>\n                    <TitleTable>Name</TitleTable>\n                    <p>{name}</p>\n                </li>\n                <li>\n                    <TitleTable>Birthday</TitleTable>\n                    <p>{birthday}</p>\n                </li>\n                <li>\n                    <TitleTable>Species</TitleTable>\n                    <p>{species}</p>\n                </li>\n                <li>\n                    <TitleTable>Category</TitleTable>\n                    <p>{category}</p>\n                </li>\n                 \n            </ContainerList>\n            \n           <p>{comment}</p>\n           <ContainerButton>\n               <Button type='button'>Learn more</Button>\n               <button>\n                   <svg width={18} height={18}>\n                      <use xlinkHref={sprite + '#icon-heart'} />\n                   </svg>                \n               </button>\n\n           </ContainerButton>\n        \n        </ContainerItem>\n    )\n}","import styled from \"styled-components\";\n\n\nexport const Container = styled.ul`\n\nlist-style: none;\n\ndisplay: grid;\n    grid-template-columns: 1fr;\n    gap: 16px;\n\n    @media (min-width: 768px) and (max-width: 1279px) {\n        grid-template-columns: 1fr 1fr;  /* 2 изображения на строку */\n    }\n\n    @media (min-width: 1280px) {\n        grid-template-columns: 1fr 1fr 1fr;  /* 3 изображения на строку */\n    }\n`\n\n","import {NoticesItem} from '../NoticesItem/NoticesItem';\nimport {Container} from './NoticeList.styled';\n\n\nexport const NoticesList=({notices})=>{\n\n    return (\n        <Container>\n\n            {notices?.map(iterm=>( \n            <NoticesItem key={iterm._id} notice={iterm}/>\n        ))}\n        \n        </Container>\n    )\n}","import { Title } from \"components/Title/Title\";\nimport { SearchField } from \"components/SearchField/SearchField\";\nimport { Pagination } from \"components/Pagination/Pagination\";\nimport {fetchnotices, fetchnoticesByKeyword} from '../../redux/operations';\nimport {NoticesList} from '../../components/NoticesList/NoticesList';\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {selectorNotices} from '../../redux/selects';\n\nexport default function Notices(){\n    const dispatch=useDispatch();\n    const [isPageNumber, setIsPageNumber] = useState(1);\n    const notices = useSelector(selectorNotices);\n\n    const handleChangeNewPage=(number)=>{\n        setIsPageNumber(number);\n    }\n\n    useEffect(()=>{\n      dispatch(fetchnotices(isPageNumber))\n    }, [dispatch, isPageNumber])\n    return(\n        <>\n        <Title name=\"Find your favorite pet\"/>\n        <SearchField fetch={fetchnoticesByKeyword}/>\n        <NoticesList notices={notices}/>\n        <Pagination handleChangeNewPage={handleChangeNewPage} currentPage={isPageNumber}/>\n\n        </>\n    )\n}","import styled from \"styled-components\";\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\nimport { RiArrowLeftDoubleFill, RiArrowRightDoubleFill } from 'react-icons/ri';\n\nexport const Container = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\ngap: 6px;\n`\n\nexport const Button = styled.button`\ndisplay: block;\nwidth: 40px;\nheight: 40px;\nborder-radius: 50%;\ncursor: pointer;\nfill: currentColor;\nborder: 1px solid #2626260D;\ntext-align: center;\n\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 700;\nline-height: 1,29;\ncolor: #262626;\n\n\n&:hover{\n    background-color: ${p => p.theme.colors.yellow};\n    color:   ${p => p.theme.colors.white};\n\n}\n`\nexport const ButtonNext = styled.button`\ndisplay: block;\nwidth: 40px;\nheight: 40px;\nborder-radius: 50%;\ncursor: pointer;\n/* fill: currentColor; */\nborder: 1px solid #2626260D;\ntext-align: center;\nfont-size: 20px;\n\n&:hover{\n    color:  #262626;\n    border: 1px solid #26262633;\n}\n`\n\nexport const StyledRiArrowLeftDoubleFill = styled(RiArrowLeftDoubleFill)`\n  color: #26262680;\n  font-size: 20px;\n\n  &:hover {\n    color: #262626;\n  }\n`;\n\nexport const StyledIoIosArrowBack = styled(IoIosArrowBack)`\n  color: #26262680;\n  font-size: 20px;\n\n  &:hover {\n    color: #262626;\n  }\n`;\n\nexport const StyledIoIosArrowForward = styled(IoIosArrowForward)`\n  color: #26262680;\n  font-size: 20px;\n\n  &:hover {\n    color: #262626;\n  }\n`;\n\nexport const StyledArrowRightDoubleFill = styled(RiArrowRightDoubleFill)`\n  color: #26262680;\n  font-size: 20px;\n\n  &:hover {\n    color: #262626;\n  }\n`;","import { useSelector } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport {selectorTotalPages} from '../../redux/selects';\nimport {Container, Button, ButtonNext, StyledRiArrowLeftDoubleFill, \n        StyledIoIosArrowBack, StyledIoIosArrowForward, StyledArrowRightDoubleFill } from './Pagination.styled';\n\n\nexport const Pagination=({handleChangeNewPage, currentPage})=>{\n  const totalPages=useSelector(selectorTotalPages);\n\n  const isMobile = useMediaQuery({ query: '(max-width: 767px)' });\n\n  const visiblePages = isMobile ? 2 : 3;\n\n  const generatePageNumbers = () => {\n    let startPage = Math.max(1, currentPage - Math.floor(visiblePages / 2));\n    let endPage = Math.min(totalPages, startPage + visiblePages - 1);\n\n    if (endPage - startPage < visiblePages - 1) {\n        startPage = Math.max(1, endPage - visiblePages + 1);\n    }\n\n    const pages = [];\n    for (let i = startPage; i <= endPage; i++) {\n        pages.push(i);\n    }\n\n    return pages;\n}\n\nconst pages = generatePageNumbers();\n\n    return(\n<>\n     {totalPages > 1 && (\n        <Container>\n        \n            <ButtonNext onClick={()=>handleChangeNewPage(1)} \n                        disabled={currentPage === 1}\n                        type='buton'>  \n                        <StyledRiArrowLeftDoubleFill /> \n           </ButtonNext>\n\n           <ButtonNext onClick={()=>handleChangeNewPage(currentPage-1)}\n                       disabled={currentPage === 1}\n                       type='buton'> \n                       <StyledIoIosArrowBack/> \n           </ButtonNext>  \n\n           {pages[0] > 1 && <Button>...</Button>}\n            \n            {pages.map((page) => (\n                <Button \n                    key={page} \n                    type='button' \n                    onClick={() => handleChangeNewPage(page)}\n                >\n                    {page}\n                </Button>\n            ))}\n\n            {pages[pages.length - 1] < totalPages && <Button>...</Button>}\n          \n           <ButtonNext onClick={()=>handleChangeNewPage(currentPage+1)}\n                       disabled={currentPage === totalPages}\n                       type='buton'>\n                       <StyledIoIosArrowForward/> \n           </ButtonNext>\n\n           <ButtonNext onClick={()=>handleChangeNewPage(totalPages)} \n                       disabled={currentPage === totalPages}\n                       type='buton'>\n                       <StyledArrowRightDoubleFill/>\n           </ButtonNext> \n\n        </Container>\n       )}\n</>\n\n    )\n}\n\n\n\n\n\n// <Button type='buton'> &laquo; </Button>\n// <Button type='buton'>&lsaquo;</Button>  \n// <Button type='buton'>1</Button>\n// <Button type='buton'>2</Button>\n// <Button type='buton'>3</Button>\n// <Button type='buton'>&rsaquo;</Button>\n// <Button type='buton'>&raquo;</Button> \n\n\n          // {/* <PaginationList\n          //   previousLabel={<IoIosArrowBack />}\n          //   nextLabel={<IoIosArrowForward />}\n          //   breakLabel={'...'}\n          //   firstLabel={<RiArrowLeftDoubleFill />}\n          //   lastLabel={<RiArrowRightDoubleFill />}         \n          //   // pageCount={totalPages}\n          //   marginPagesDisplayed={2}\n          //   pageRangeDisplayed={5}\n          //   onPageChange={handlePageChange}\n          //   containerClassName={'pagination'}\n          //   pageClassName={'page-item'}\n          //   pageLinkClassName={'page-link'}\n          //   previousClassName={'page-item'}\n          //   previousLinkClassName={'page-link'}\n          //   nextClassName={'page-item'}\n          //   nextLinkClassName={'page-link'}\n          //   breakClassName={'page-item'}\n          //   breakLinkClassName={'page-link'}\n          //   activeClassName={'active'}\n\n          // /> */}","import styled from 'styled-components';\n\nexport const Input = styled.input`\nmargin-bottom: ${p=>p.theme.spacing(3)};\npadding-left : ${p=>p.theme.spacing(3)};\nwidth: 100%;\nheight: 42px;\n\nfont-family: Manrope;\nfont-size: 16px;\nfont-weight: 500;\nline-height: 1,25;\nletter-spacing: -0.03em;\ntext-align: left;\n\nborder-radius: 30px;\nborder: 1px solid #26262626;\n\n&::placeholder {\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29;\ncolor: rgba(38, 38, 38, 0.5);\n  }\n\n  &:hover {\n    border: 1px solid ${p=>p.theme.colors.yellow}\n  }\n\n  @media (min-width: 768px) {\n    width: 230px;\n    height: 48px;\n  }\n`\n\nexport const Container = styled.form`\nposition: relative;\n`\n\nexport const Svg = styled.svg`\nposition: absolute;\ntop: 25%;\nright: 10px;\n\nwidth: 18px;\nheight: 18px;\ncursor: pointer;\nfill: currentColor;\n`\n\nexport const SvgReset = styled.svg`\nposition: absolute;\ntop: 25%;\nright: 40px;\n\nwidth: 18px;\nheight: 18px;\ncursor: pointer;\nfill: currentColor;\n`","import React, { useState } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport {Container, Input, Svg, SvgReset} from './SearchField.styled';\nimport { useDispatch } from 'react-redux';\n\nexport const SearchField =({fetch})=>{\n  const dispatch =  useDispatch();\n    const [searchValue, setSearchValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setSearchValue(e.target.value);\n    };\n\n    const handleResetClick = () => {\n        setSearchValue('');\n    };\n\n    const handleSubmit = (evt) => {\n      evt.preventDefault();\n      dispatch(fetch({ keyword: searchValue, pageNumber: 1}));\n      handleResetClick();\n  };\n\n//   useEffect(() => {\n//       if (searchValue) {\n//           dispatch(fetchNewsByKeyword({ keyword: searchValue, pageNumber:1 }));\n//       }\n//   }, [dispatch, searchValue]);\n\n\n    return(\n        <Container onClick = {handleSubmit}>\n           <Input placeholder=\"Search\"\n           name='name'\n           type='text'\n           value={searchValue}\n           onChange={handleInputChange}/>\n\n           <button type='submit'>\n             <Svg >\n                <use xlinkHref={sprite + '#icon-search'}/>\n              </Svg  >           \n           </button>\n\n           {searchValue  &&   <SvgReset onClick = {handleResetClick}>\n                <use xlinkHref={sprite + '#icon-x'}/>\n            </SvgReset> }\n\n        </Container>\n    )\n}\n\n","import styled from 'styled-components';\n\nexport const TitleLogin = styled.h1`\nmargin-bottom : ${p=>p.theme.spacing(2)};\nfont-family: Manrope;\nfont-size: 28px;\nfont-weight: 700;\nline-height: 1;\nletter-spacing: -0.04em;\ntext-align: left;\ncolor: #262626;\n\n@media (min-width: 768px) {\nfont-size: 54px;\n}\n`","import {TitleLogin} from './title.styled';\n\nexport const Title =({name})=>{\n    return(\n      \n        <TitleLogin>{name}</TitleLogin>\n    \n    )\n}","import { createSelector } from \"@reduxjs/toolkit\";\n\n  export const selectContacts=state=>state.contact.items;\n  export const selectFilter=state => state.filter;\n  export const selectIsLoading=state=> state.contact.isLoading;\n  export const selectError=state=>state.contact.error;\n  export const selectorNews=state=>state.news.news;\n  export const selectorTotalPages=state=>state.news.totalPages;\n  export const selectorTotPages=state=>state.notices.totalPages;\n  export const selectorNotices=state=>state.notices.notices;\n\n\n  export const selectVisibleContacts = createSelector(\n    [ selectContacts, selectFilter],\n     (contact, filter) => {\n       return contact.filter(contacts => contacts.name.toLowerCase()\n        .includes(filter.toLowerCase()))\n     }\n    )\n\n\n\n\n"],"names":["ContainerItem","styled","_templateObject","_taggedTemplateLiteral","Img","_templateObject2","Title","_templateObject3","Rating","_templateObject4","ContainerList","_templateObject5","ContainerTitle","_templateObject6","ContainerPopulate","_templateObject7","TitleTable","_templateObject8","ContainerButton","_templateObject9","_templateObject10","_templateObject11","Button","_templateObject12","p","theme","colors","yellow","white","NoticesItem","_ref","notice","imgURL","title","popularity","comment","name","birthday","species","category","_jsxs","children","_jsx","src","alt","width","height","xlinkHref","sprite","type","Container","NoticesList","notices","map","iterm","_id","Notices","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","isPageNumber","setIsPageNumber","useSelector","selectorNotices","useEffect","fetchnotices","_Fragment","SearchField","fetch","fetchnoticesByKeyword","Pagination","handleChangeNewPage","number","currentPage","ButtonNext","StyledRiArrowLeftDoubleFill","RiArrowLeftDoubleFill","StyledIoIosArrowBack","IoIosArrowBack","StyledIoIosArrowForward","IoIosArrowForward","StyledArrowRightDoubleFill","RiArrowRightDoubleFill","totalPages","selectorTotalPages","visiblePages","useMediaQuery","query","pages","startPage","Math","max","floor","endPage","min","i","push","generatePageNumbers","onClick","disabled","page","length","Input","spacing","Svg","SvgReset","searchValue","setSearchValue","handleResetClick","evt","preventDefault","keyword","pageNumber","placeholder","value","onChange","e","target","TitleLogin","selectContacts","state","contact","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectorNews","news","selectVisibleContacts","createSelector","contacts","toLowerCase","includes"],"sourceRoot":""}