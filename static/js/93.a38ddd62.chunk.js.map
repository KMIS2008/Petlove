{"version":3,"file":"static/js/93.a38ddd62.chunk.js","mappings":"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","sources":["components/SectionTitle/SectionTitle.styled.js","components/SectionTitle/SectionTitle.js","components/FormAddContact/FormAdContact.styled.js","components/FormAddContact/FormAddContact.js","components/App.styled.js","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","Pages/ContactsPage/ContactPagestyled.js","Pages/ContactsPage/ContactsPage.js","redux/selects.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h1`\ndisplay: block;\nmargin-top: ${p=>p.theme.spacing(5)};\nmargin-bottom: ${p=>p.theme.spacing(5)};\ntext-align: start;\n`","import { Title } from \"./SectionTitle.styled\";\n\nexport const SectionTitle = ({title})=> {\n    return (\n        <Title>\n            {title}\n        </Title>\n    )\n    }","import {\n    Form,\n    Field,\n    ErrorMessage,\n  } from 'formik';\n\nimport styled from 'styled-components';\n\nexport const Button = styled.button`\nwidth: 100px;\ndisplay: block;\npadding: ${p=>p.theme.spacing(1)};\ntext-align: center;\nfont-size: 18px;\nborder: 1px solid ${p=>p.theme.colors.border};\nborder-radius: 5px;\nbox-shadow: rgb(169, 158, 158) 0px 2px 5px 0px;\n\n\n`;\n\nexport const FormStyle = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap:  ${p=>p.theme.spacing(2)};\n  margin-top: ${p=>p.theme.spacing(2)};\n  padding:  ${p=>p.theme.spacing(4)};\n  max-width: 400px;\n  border: 3px solid ${p=>p.theme.colors.black};\n`;\n\nexport const FieldStyle = styled(Field)`\n  padding: ${p=>p.theme.spacing(1)};\n  font: inherit;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom:  ${p=>p.theme.spacing(2)};\n  gap:  ${p=>p.theme.spacing(2)};\n  font-weight: normal;\n  text-align: start;\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\ncolor: ${p=>p.theme.colors.red};\n`\n","import { Formik } from 'formik';\nimport { Button } from './FormAdContact.styled'; \nimport { FormStyle,\n         FieldStyle,\n         FormLabel,\n         ErrorMsg} from './FormAdContact.styled';\nimport * as Yup from 'yup';\n\nimport { addContact } from 'redux/operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/selects'; \n \n         const SignupSchema = Yup.object().shape({\n           name: Yup.string()\n             .min(2, \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\")\n             .required('Required'),\n           number: Yup.string()\n             .min(10, 'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +')\n             .max(14, 'Too Long!')\n             .required('Required'),\n         });\n\nexport const FormAddContact = ()=> {\nconst contacts = useSelector(selectContacts);\nconst dispatch = useDispatch();\n\nconst addContacts =(newContact)=> {\n    \n  const newAddContact = contacts.some(contact=> newContact.name.toLowerCase().trim() === contact.name.toLowerCase());\n\n    if(newAddContact){\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    } \n\n    dispatch(addContact(newContact))\n}\n\n    return (\n  <div>\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n\n      validationSchema = {SignupSchema}\n\n      onSubmit={(values, actions) => {\n        addContacts(values);\n        actions.resetForm();\n      }}\n\n    >\n      <FormStyle>\n           <FormLabel >Name\n                <FieldStyle            \n                     type=\"text\"\n                     name=\"name\"\n                    //  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                     title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                     required />\n                <ErrorMsg name=\"name\" component=\"span\"/>\n            </FormLabel>\n\n            <FormLabel >Number\n                <FieldStyle            \n                     type=\"tel\"\n                     name=\"number\"\n                    //  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                     title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                     required />\n                <ErrorMsg name=\"number\" component=\"span\"/>\n            </FormLabel>\n        \n        <Button type=\"submit\">Submit</Button>\n      </FormStyle>\n    </Formik>\n  </div>\n    )\n}","import styled from 'styled-components';\n\nexport const TitleContacts = styled.h2`\n/* display: block;\nmargin-top: 0px;\nmargin-top: ${p=>p.theme.spacing(10)};\nmargin-bottom: ${p=>p.theme.spacing(4)};\ntext-align: start; */\n`\nexport const Contater = styled.div`\nwidth: 100%;\nmin-width: 320px;\nmax-width: 1440px;\npadding: 10px 20px;\nmargin: auto;\n/* height: 100vw;\ndisplay: block;\nmargin: 0, auto;\npadding: 50px;\nbackground-color: ${p=>p.theme.colors.rose}; */\n`","import styled from 'styled-components';\n\nexport const Contact = styled.li`\nwidth: 500px;\ndisplay: flex;\njustify-content: space-between;\nmargin-top: 15px;\nmargin-left: 20px;\nfont-weight: normal;\nfont-size: 22px;\n`\nexport const ButtonDelete = styled.button`\nwidth: 100px;\ndisplay: block;\npadding: ${p=>p.theme.spacing(1)};\ntext-align: center;\nfont-size: 18px;\nborder: 1px solid ${p=>p.theme.colors.border};\nborder-radius: 5px;\nbox-shadow: rgb(169, 158, 158) 0px 2px 5px 0px;\n&:hover{\n  background-color: ${p=>p.theme.colors.border};\n}\n`\n","import {Contact,\n        ButtonDelete} from './Contacts.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/selects';\n// import { removeContact } from 'redux/contactSlice';\nimport { deleteContact } from 'redux/operations';\n\nexport const ContactsList = ()=>{\n    const contacts = useSelector(selectVisibleContacts);\n    const dispatch = useDispatch();\n    const removeButton = (contactId)=>dispatch(deleteContact(contactId));\n//  console.log(contacts)\n    \n    return (\n        <ul>\n            {contacts.map((contact)=>{\n                return (\n                  <Contact key={contact.id}>{contact.name}:  {contact.number}\n\n                  <ButtonDelete type='button' onClick = {()=>removeButton(contact.id)}>Delete</ButtonDelete>\n                  </Contact>\n                )\n            })}\n        </ul>\n    )\n}","import styled from 'styled-components';\n\nexport const FormFilter = styled.form`\n/* padding:   ${p=>p.theme.spacing(4)}; */\n`\n\nexport const TitleFilter = styled.label`\ndisplay: flex;\nflex-direction: column;\nfont-weight: normal;\nfont-size: 22px;\n`\n\nexport const InputFilter = styled.input`\nwidth: 350px;\nheight: 30px;\nborder: 3px solid ${p=>p.theme.colors.darkblue};`","\nimport {FormFilter,\n        InputFilter,\n        TitleFilter} from './Filter.styled';\n\nimport { selectFilter } from 'redux/selects'; \nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/filterSlice';\nimport { nanoid } from '@reduxjs/toolkit';\n\nconst filterId= nanoid();\n\nexport const FilterConctacts = ()=>{\n\nconst filter = useSelector(selectFilter);\nconst dispatch = useDispatch();\n\nreturn(\n    \n        <FormFilter>\n            <TitleFilter> \n                Find contacts by name\n                <InputFilter value={filter} id={filterId} onChange={event=>dispatch(changeFilter(event.target.value))}/>\n            </TitleFilter>\n        </FormFilter>\n)\n\n}","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n\nposition: absolute;\nmargin: 25px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`","import { selectError, selectIsLoading } from '../../redux/selects';\nimport {useDispatch, useSelector } from 'react-redux';\nimport { SectionTitle } from 'components/SectionTitle/SectionTitle';\nimport { FormAddContact } from 'components/FormAddContact/FormAddContact';\nimport { TitleContacts } from 'components/App.styled';\nimport { ContactsList } from 'components/Contacts/Contacts';\nimport { FilterConctacts } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/operations';\nimport { useEffect } from 'react';\nimport { Wrapper } from './ContactPagestyled';\n\nexport default function ContactsPage(){\n\n    const error = useSelector(selectError);\n    const isLoading = useSelector(selectIsLoading);\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n        dispatch(fetchContacts());\n      }, [dispatch]);\n    \n    return (\n        <Wrapper>\n\n           <SectionTitle title=\"Phonebook\"/>\n           <FormAddContact/>\n           <TitleContacts>Contacts</TitleContacts>\n           {isLoading && (<p>...isLoading</p>) }\n           {error && (<p>Error</p>)}\n           <FilterConctacts/>\n           <ContactsList/>\n\n        </Wrapper>\n    )\n    \n}","import { createSelector } from \"@reduxjs/toolkit\";\n\n  export const selectContacts=state=>state.contact.items;\n  export const selectFilter=state => state.filter;\n  export const selectIsLoading=state=> state.contact.isLoading;\n  export const selectError=state=>state.contact.error;\n  export const selectorNews=state=>state.news.news;\n  export const selectorTotalPages=state=>state.news.totalPages;\n  export const selectorTotPages=state=>state.notices.totalPages;\n  export const selectorNotices=state=>state.notices.notices;\n  export const selectorFriends=state=>state.friends.friends;\n\n\n  export const selectVisibleContacts = createSelector(\n    [ selectContacts, selectFilter],\n     (contact, filter) => {\n       return contact.filter(contacts => contacts.name.toLowerCase()\n        .includes(filter.toLowerCase()))\n     }\n    )\n\n\n\n\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};"],"names":["Title","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","SectionTitle","_ref","title","_jsx","children","Button","colors","border","FormStyle","Form","_templateObject2","black","FieldStyle","Field","_templateObject3","FormLabel","_templateObject4","ErrorMsg","ErrorMessage","_templateObject5","red","SignupSchema","Yup","shape","name","min","required","number","max","FormAddContact","contacts","useSelector","selectContacts","dispatch","useDispatch","Formik","initialValues","validationSchema","onSubmit","values","actions","newContact","some","contact","toLowerCase","trim","alert","concat","addContact","resetForm","_jsxs","type","component","TitleContacts","Contact","rose","ButtonDelete","ContactsList","selectVisibleContacts","map","onClick","contactId","id","deleteContact","FormFilter","TitleFilter","InputFilter","darkblue","filterId","nanoid","FilterConctacts","filter","selectFilter","value","onChange","event","changeFilter","target","Wrapper","ContactsPage","error","selectError","isLoading","selectIsLoading","useEffect","fetchContacts","state","items","selectorNews","news","selectorTotalPages","totalPages","selectorNotices","notices","selectorFriends","friends","createSelector","includes","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations"],"sourceRoot":""}