{"version":3,"file":"static/js/93.4b920e23.chunk.js","mappings":"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","sources":["components/SectionTitle/SectionTitle.styled.js","components/SectionTitle/SectionTitle.js","components/FormAddContact/FormAdContact.styled.js","components/FormAddContact/FormAddContact.js","components/App.styled.js","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","Pages/ContactsPage/ContactPagestyled.js","Pages/ContactsPage/ContactsPage.js","redux/selects.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h1`\ndisplay: block;\nmargin-top: ${p=>p.theme.spacing(5)};\nmargin-bottom: ${p=>p.theme.spacing(5)};\ntext-align: start;\n`","import { Title } from \"./SectionTitle.styled\";\n\nexport const SectionTitle = ({title})=> {\n    return (\n        <Title>\n            {title}\n        </Title>\n    )\n    }","import {\n    Form,\n    Field,\n    ErrorMessage,\n  } from 'formik';\n\nimport styled from 'styled-components';\n\nexport const Button = styled.button`\nwidth: 100px;\ndisplay: block;\npadding: ${p=>p.theme.spacing(1)};\ntext-align: center;\nfont-size: 18px;\nborder: 1px solid ${p=>p.theme.colors.border};\nborder-radius: 5px;\nbox-shadow: rgb(169, 158, 158) 0px 2px 5px 0px;\n\n\n`;\n\nexport const FormStyle = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap:  ${p=>p.theme.spacing(2)};\n  margin-top: ${p=>p.theme.spacing(2)};\n  padding:  ${p=>p.theme.spacing(4)};\n  max-width: 400px;\n  border: 3px solid ${p=>p.theme.colors.black};\n`;\n\nexport const FieldStyle = styled(Field)`\n  padding: ${p=>p.theme.spacing(1)};\n  font: inherit;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom:  ${p=>p.theme.spacing(2)};\n  gap:  ${p=>p.theme.spacing(2)};\n  font-weight: normal;\n  text-align: start;\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\ncolor: ${p=>p.theme.colors.red};\n`\n","import { Formik } from 'formik';\nimport { Button } from './FormAdContact.styled'; \nimport { FormStyle,\n         FieldStyle,\n         FormLabel,\n         ErrorMsg} from './FormAdContact.styled';\nimport * as Yup from 'yup';\n\nimport { addContact } from 'redux/operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/selects'; \n \n         const SignupSchema = Yup.object().shape({\n           name: Yup.string()\n             .min(2, \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\")\n             .required('Required'),\n           number: Yup.string()\n             .min(10, 'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +')\n             .max(14, 'Too Long!')\n             .required('Required'),\n         });\n\nexport const FormAddContact = ()=> {\nconst contacts = useSelector(selectContacts);\nconst dispatch = useDispatch();\n\nconst addContacts =(newContact)=> {\n    \n  const newAddContact = contacts.some(contact=> newContact.name.toLowerCase().trim() === contact.name.toLowerCase());\n\n    if(newAddContact){\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    } \n\n    dispatch(addContact(newContact))\n}\n\n    return (\n  <div>\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n\n      validationSchema = {SignupSchema}\n\n      onSubmit={(values, actions) => {\n        addContacts(values);\n        actions.resetForm();\n      }}\n\n    >\n      <FormStyle>\n           <FormLabel >Name\n                <FieldStyle            \n                     type=\"text\"\n                     name=\"name\"\n                    //  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                     title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                     required />\n                <ErrorMsg name=\"name\" component=\"span\"/>\n            </FormLabel>\n\n            <FormLabel >Number\n                <FieldStyle            \n                     type=\"tel\"\n                     name=\"number\"\n                    //  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                     title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                     required />\n                <ErrorMsg name=\"number\" component=\"span\"/>\n            </FormLabel>\n        \n        <Button type=\"submit\">Submit</Button>\n      </FormStyle>\n    </Formik>\n  </div>\n    )\n}","import styled from 'styled-components';\n\nexport const TitleContacts = styled.h2`\n/* display: block;\nmargin-top: 0px;\nmargin-top: ${p=>p.theme.spacing(10)};\nmargin-bottom: ${p=>p.theme.spacing(4)};\ntext-align: start; */\n`\nexport const Contater = styled.div`\nwidth: 100%;\nmin-width: 320px;\nmax-width: 1440px;\npadding: 10px 20px;\nmargin: auto;\n/* height: 100vw;\ndisplay: block;\nmargin: 0, auto;\npadding: 50px;\nbackground-color: ${p=>p.theme.colors.rose}; */\n`","import styled from 'styled-components';\n\nexport const Contact = styled.li`\nwidth: 500px;\ndisplay: flex;\njustify-content: space-between;\nmargin-top: 15px;\nmargin-left: 20px;\nfont-weight: normal;\nfont-size: 22px;\n`\nexport const ButtonDelete = styled.button`\nwidth: 100px;\ndisplay: block;\npadding: ${p=>p.theme.spacing(1)};\ntext-align: center;\nfont-size: 18px;\nborder: 1px solid ${p=>p.theme.colors.border};\nborder-radius: 5px;\nbox-shadow: rgb(169, 158, 158) 0px 2px 5px 0px;\n&:hover{\n  background-color: ${p=>p.theme.colors.border};\n}\n`\n","import {Contact,\n        ButtonDelete} from './Contacts.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/selects';\n// import { removeContact } from 'redux/contactSlice';\nimport { deleteContact } from 'redux/operations';\n\nexport const ContactsList = ()=>{\n    const contacts = useSelector(selectVisibleContacts);\n    const dispatch = useDispatch();\n    const removeButton = (contactId)=>dispatch(deleteContact(contactId));\n//  console.log(contacts)\n    \n    return (\n        <ul>\n            {contacts.map((contact)=>{\n                return (\n                  <Contact key={contact.id}>{contact.name}:  {contact.number}\n\n                  <ButtonDelete type='button' onClick = {()=>removeButton(contact.id)}>Delete</ButtonDelete>\n                  </Contact>\n                )\n            })}\n        </ul>\n    )\n}","import styled from 'styled-components';\n\nexport const FormFilter = styled.form`\n/* padding:   ${p=>p.theme.spacing(4)}; */\n`\n\nexport const TitleFilter = styled.label`\ndisplay: flex;\nflex-direction: column;\nfont-weight: normal;\nfont-size: 22px;\n`\n\nexport const InputFilter = styled.input`\nwidth: 350px;\nheight: 30px;\nborder: 3px solid ${p=>p.theme.colors.darkblue};`","\nimport {FormFilter,\n        InputFilter,\n        TitleFilter} from './Filter.styled';\n\nimport { selectFilter } from 'redux/selects'; \nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/filterSlice';\nimport { nanoid } from '@reduxjs/toolkit';\n\nconst filterId= nanoid();\n\nexport const FilterConctacts = ()=>{\n\nconst filter = useSelector(selectFilter);\nconst dispatch = useDispatch();\n\nreturn(\n    \n        <FormFilter>\n            <TitleFilter> \n                Find contacts by name\n                <InputFilter value={filter} id={filterId} onChange={event=>dispatch(changeFilter(event.target.value))}/>\n            </TitleFilter>\n        </FormFilter>\n)\n\n}","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n\nposition: absolute;\nmargin: 25px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`","import { selectError, selectIsLoading } from '../../redux/selects';\nimport {useDispatch, useSelector } from 'react-redux';\nimport { SectionTitle } from 'components/SectionTitle/SectionTitle';\nimport { FormAddContact } from 'components/FormAddContact/FormAddContact';\nimport { TitleContacts } from 'components/App.styled';\nimport { ContactsList } from 'components/Contacts/Contacts';\nimport { FilterConctacts } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/operations';\nimport { useEffect } from 'react';\nimport { Wrapper } from './ContactPagestyled';\n\nexport default function ContactsPage(){\n\n    const error = useSelector(selectError);\n    const isLoading = useSelector(selectIsLoading);\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n        dispatch(fetchContacts());\n      }, [dispatch]);\n    \n    return (\n        <Wrapper>\n\n           <SectionTitle title=\"Phonebook\"/>\n           <FormAddContact/>\n           <TitleContacts>Contacts</TitleContacts>\n           {isLoading && (<p>...isLoading</p>) }\n           {error && (<p>Error</p>)}\n           <FilterConctacts/>\n           <ContactsList/>\n\n        </Wrapper>\n    )\n    \n}","import { createSelector } from \"@reduxjs/toolkit\";\n\n  export const selectContacts=state=>state.contact.items;\n  export const selectFilter=state => state.filter;\n  export const selectIsLoading=state=> state.contact.isLoading;\n  export const selectError=state=>state.contact.error;\n  export const selectorNews=state=>state.news.news;\n  export const selectorTotalPages=state=>state.news.totalPages;\n  export const selectorTotPages=state=>state.notices.totalPages;\n  export const selectorNotices=state=>state.notices.notices;\n\n\n  export const selectVisibleContacts = createSelector(\n    [ selectContacts, selectFilter],\n     (contact, filter) => {\n       return contact.filter(contacts => contacts.name.toLowerCase()\n        .includes(filter.toLowerCase()))\n     }\n    )\n\n\n\n\n"],"names":["Title","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","SectionTitle","_ref","title","_jsx","children","Button","colors","border","FormStyle","Form","_templateObject2","black","FieldStyle","Field","_templateObject3","FormLabel","_templateObject4","ErrorMsg","ErrorMessage","_templateObject5","red","SignupSchema","Yup","shape","name","min","required","number","max","FormAddContact","contacts","useSelector","selectContacts","dispatch","useDispatch","Formik","initialValues","validationSchema","onSubmit","values","actions","newContact","some","contact","toLowerCase","trim","alert","concat","addContact","resetForm","_jsxs","type","component","TitleContacts","Contact","rose","ButtonDelete","ContactsList","selectVisibleContacts","map","onClick","contactId","id","deleteContact","FormFilter","TitleFilter","InputFilter","darkblue","filterId","nanoid","FilterConctacts","filter","selectFilter","value","onChange","event","changeFilter","target","Wrapper","ContactsPage","error","selectError","isLoading","selectIsLoading","useEffect","fetchContacts","state","items","selectorNews","news","selectorTotalPages","totalPages","selectorNotices","notices","createSelector","includes"],"sourceRoot":""}