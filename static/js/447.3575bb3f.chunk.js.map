{"version":3,"file":"static/js/447.3575bb3f.chunk.js","mappings":"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","sources":["components/NoticesItem/NoticeItrm.styled.js","components/ModalAttention/ModalAttention.styled.js","components/ModalAttention/ModalAttention.js","components/ModalNotice/ModalNotice.styled.js","components/ModalNotice/ModalNotice.js","components/NoticesItem/NoticesItem.js","components/NoticesList/NoticeList.styled.js","components/NoticesList/NoticesList.js","components/NoticesFilters/NoticesFilters.styled.js","components/NoticesFilters/NoticesFilters.js","Pages/Notices/Notices.js","components/Pagination/Pagination.styled.js","components/Pagination/Pagination.js","components/SearchField/SearchField.styled.js","components/SearchField/SearchField.js","components/Title/title.styled.js","components/Title/Title.js","redux/selects.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ContainerItem = styled.li`\npadding: 20px;\n\n@media (min-width: 768px) {\n    width: 100%; \n    /* max-width: 342px;  */\n    margin: 0 auto; \n}\n\n/* @media (min-width: 1280px) {\n    max-width: 363px\n} */\n`\nexport const Img = styled.img`\nborder-radius: 16px;\nmargin-bottom: 20px;\n`\n\nexport const Title = styled.h3`\nfont-family: Manrope;\nfont-size: 16px;\nfont-weight: 700;\nline-height: 1,25;\ncolor: #2B2B2A;\n`\n\nexport const Rating = styled.p`\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29;\n`\n\nexport const ContainerList= styled.ul`\ndisplay: flex;\njustify-content: space-between;\nlist-style: none;\nmargin-bottom: 14px;\n`\n\nexport const ContainerTitle= styled.div`\ndisplay: flex;\njustify-content: space-between;\nmargin-bottom: 5px;\n`\n\nexport const ContainerPopulate= styled.div`\ndisplay: flex;\ngap:2px;\njustify-content: center;\nalign-items: center;\n`\n\nexport const TitleTable= styled.p`\nfont-family: Manrope;\nfont-size: 10px;\nfont-weight: 500;\nline-height: 1,4;\nletter-spacing: -0.02em;\ncolor: #26262680;\n`\n\nexport const TextTable= styled.p`\nfont-family: Manrope;\nfont-size: 12px;\nfont-weight: 500;\nline-height: 1,4;\nletter-spacing: -0.02em;\ncolor: #262626;\n`\n\nexport const Comment= styled.p`\nmargin-bottom: 16px;\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29;\nletter-spacing: -0.02em;\n\ncolor: #2B2B2A;\n`\n\nexport const ContainerButton= styled.div`\ndisplay: flex;\njustify-content: space-between;\n`\n\nexport const Button = styled.button`\nwidth: 231px;\nheight: 46px;\n\nborder-radius: 30px ;\nbackground: #F6B83D;\n\nbackground: ${p => p.theme.colors.yellow};\n\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29px;\nletter-spacing: -0.03em;\ntext-align: center;\ncolor: ${p=>p.theme.colors.white};\n`\n\nexport const ButtonSVG = styled.button`\nwidth: 46ppx;\nheight: 46px;\npadding: 14px;\ngap: 10px;\nborder-radius: 30px;\nbackground-color: #FFF4DF;\n\n&:hover{\n    background-color: #FBE7C1;\n}\n\n`\n\n\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\nposition: relative;\npadding-top: 40px;\n`\n\nexport const SvgButton = styled.div`\ndisplay: block;\nposition:absolute;\nright: 0; top: 0;\nborder: none;\nmargin-left: auto;\n`\n\nexport const ContainerSvg = styled.div`\ndisplay: block;\nmargin: 0 auto;\nmargin-bottom: 20px;\npadding:18px;\nwidth: 80px;\nheight: 80px;\nborder-radius: 50%;\nbackground-color: #FFF4DF;\n`\n\nexport const Img = styled.img`\ndisplay: block;\nmargin: auto;\n`\n\nexport const Title = styled.h2`\nmargin-bottom: 20px;\nfont-family: Manrope;\nfont-size: 20px;\nfont-weight: 700;\nline-height: 1;\nletter-spacing: -0.03em;\ntext-align: center;\ncolor: ${p => p.theme.colors.yellow};\n/* margin-bottom: ${p=>p.theme.spacing(2)}; */\n`\n\nexport const Text = styled.p`\nmargin-bottom: 20px;\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29px;\nletter-spacing: -0.02em;\ntext-align: center;\ncolor: #2B2B2A;\n`","import Modal from \"react-modal\";\nimport { useEffect } from \"react\";\nimport {Container, SvgButton, ContainerSvg, Img, Title, Text} from './ModalAttention.styled';\nimport sprite from '../../images/sprite.svg';\nimport dog_small from '../../images/dog_small.jpg';\n\nimport { AuthNav } from 'components/AuthNav/AuthNav';\n\nModal.setAppElement('#modal');\n\nexport const ModalAttention = ({ isOpenModalAttention, setIsOpenModalAttention }) => {\n\n\n    const customStyles = {\n      overlay: {\n        backgroundColor: \"rgba(38, 38, 38, 0.3)\",\n       \n      },\n      content: {\n        top: \"50%\",\n        left: \"50%\",\n        right: \"auto\",\n        bottom: \"auto\",\n        marginRight: \"-50%\",\n        transform: \"translate(-50%, -50%)\",\n        padding: \"20px\",\n        maxWidth: \"335px\",\n        maxHeight: \"394px\",\n        borderRadius: \"30px\",\n        backgroundColor: \"#FFFFFF\",\n      },\n    };\n  \n    useEffect(() => {\n      if (isOpenModalAttention) {\n        document.body.classList.add('no-scroll');\n      } else {\n        document.body.classList.remove('no-scroll');\n      }\n  \n      return () => {\n        document.body.classList.remove('no-scroll');\n      };\n    }, [isOpenModalAttention]);\n    \n      return (\n        <>\n        <Modal   \n          isOpen={isOpenModalAttention}\n          onRequestClose={() => {\n            setIsOpenModalAttention(false);\n          }}\n               \n          style={customStyles}\n  \n          contentLabel=\"More info modal\"     \n        >\n  <Container>\n          <SvgButton\n             onClick={() => {\n                setIsOpenModalAttention(false);\n             }}>\n              <svg width= '24px' height='24px'>\n                  <use xlinkHref={sprite + '#icon-x'} />\n              </svg> \n           </SvgButton>\n\n           <ContainerSvg>\n             <Img src={dog_small} alt=\"small-dog\" width= '44px' height='44px'/>\n           </ContainerSvg>\n  \n           <Title>Attention</Title>\n  \n           <Text>We would like to remind you that certain functionality is available only to authorized users.If you have an account, please log in with your credentials.\n             If you do not already have an account, you must register to access these features.\n           </Text>\n\n           <AuthNav />\n  \n  </Container>\n  \n        </Modal>\n        \n        </>\n      );\n    }; ","import styled from \"styled-components\";\n\nexport const Container = styled.div`\nposition: relative;\npadding-top: 40px;\n`\n\nexport const SvgButton = styled.div`\ndisplay: block;\nposition:absolute;\nright: 0; top: 0;\nborder: none;\nmargin-left: auto;\n`\nexport const ContainerImg = styled.div`\nposition: relative;\n`\n\nexport const Svg = styled.div`\nposition: absolute;\ntop: 0;\nleft: 30%;\ndisplay: block;\npadding: 8px 14px 8px 14px;\nwidth: 52px;\nheight: 34px;\nborder-radius: 30px;\nbackground-color: #FFF4DF;\n\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29px;\nletter-spacing: -0.02em;\ntext-align: center;\n\ncolor: ${p => p.theme.colors.yellow};\n`\n\nexport const Img = styled.img`\ndisplay: block;\nmargin: auto;\nmargin-bottom: ${p => p.theme.spacing(4)};\nwidth: 120px;\nheight: 120px;\nborder-radius: 50%;\n`\n\nexport const Title = styled.h2`\nmargin-bottom: 8px;\nfont-family: Manrope;\nfont-size: 16px;\nfont-weight: 700;\nline-height: 1,25;\n\ntext-align: center;\ncolor: #2B2B2A;\n\n`\nexport const ContainerPopulate = styled.div`\ndisplay: flex;\njustify-content: center;\ngap: 64px;\nmargin-bottom: 8px;\n`\nexport const Rating = styled.p`\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29;\n`\nexport const ContainerList= styled.ul`\ndisplay: flex;\njustify-content: space-between;\nlist-style: none;\nmargin-bottom: 14px;\n`\nexport const TitleTable= styled.p`\nfont-family: Manrope;\nfont-size: 10px;\nfont-weight: 500;\nline-height: 1,4;\nletter-spacing: -0.02em;\ncolor: #26262680;\n`\n\nexport const Text= styled.p`\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29;\nletter-spacing: -0.02em;\n\ncolor: #2B2B2A;\n`\n\nexport const Comment= styled.p`\nmargin-bottom: 16px;\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29;\nletter-spacing: -0.02em;\n\ncolor: #2B2B2A;\n`\n\nexport const ContainerButton= styled.div`\ndisplay: flex;\ngap: 8px;\njustify-content: center;\nalign-items: center;\n`\nexport const ButtonAdd= styled.button`\ndisplay: flex;\nmargin: auto;\nalign-items: center;\njustify-content: center;\ngap: 4px;\nbackground-color: ${p => p.theme.colors.yellow};\nborder-radius: 30px;\nwidth: 135px;\nheight: 44px;\n\nfont-family: Manrope;\nfont-size: 16px;\nfont-weight: 500;\nline-height: 1,25;\nletter-spacing: -0.03em;\ntext-align: center;\ncolor:${p => p.theme.colors.white};\n\n&:hover{\n    background-color: #F9B020;\n}\n`\n\nexport const ButtonContact= styled.button`\ndisplay: block;\nmargin: auto;\nbackground-color: ${p => p.theme.colors.rose};\nborder-radius: 30px;\nwidth: 135px;\nheight: 44px;\n\nfont-family: Manrope;\nfont-size: 16px;\nfont-weight: 500;\nline-height: 1,25;\nletter-spacing: -0.03em;\ntext-align: center;\ncolor:${p => p.theme.colors.yellow};\n\n&:hover{\n    background-color: #FBE7C1;\n}\n\n`","import Modal from \"react-modal\";\nimport { useEffect } from \"react\";\nimport {Container, SvgButton, ContainerImg, Svg, Img, Title, ContainerPopulate, Rating,ContainerList, TitleTable, Text,\n        Comment, ContainerButton, ButtonAdd, ButtonContact } from './ModalNotice.styled';\nimport sprite from '../../images/sprite.svg';\n\n\nModal.setAppElement('#modal');\n\nexport const ModalNotice = ({ isOpenModalNotice, setIsOpenModalNotice, notice }) => {\n    const {imgURL ,title, popularity, comment, name, birthday, species, sex}=notice;\n\n\n    const customStyles = {\n      overlay: {\n        backgroundColor: \"rgba(38, 38, 38, 0.3)\",\n       \n      },\n      content: {\n        top: \"50%\",\n        left: \"50%\",\n        right: \"auto\",\n        bottom: \"auto\",\n        marginRight: \"-50%\",\n        transform: \"translate(-50%, -50%)\",\n        padding: \"20px\",\n        maxWidth: \"335px\",\n        maxHeight: \"446px\",\n        borderRadius: \"30px\",\n        backgroundColor: \"#FFFFFF\",\n      },\n    };\n\n    useEffect(() => {\n      if (isOpenModalNotice) {\n        document.body.classList.add('no-scroll');\n      } else {\n        document.body.classList.remove('no-scroll');\n      }\n  \n      return () => {\n        document.body.classList.remove('no-scroll');\n      };\n    }, [isOpenModalNotice]);\n\n      return (\n        <>\n        <Modal   \n          isOpen={isOpenModalNotice}\n          onRequestClose={() => {\n            setIsOpenModalNotice(false);\n          }}\n               \n          style={customStyles}\n          contentLabel=\"More info modal\"     \n        >\n  <Container>\n          <SvgButton\n             onClick={() => {\n                setIsOpenModalNotice(false);\n             }}>\n              <svg width= '24px' height='24px'>\n                  <use xlinkHref={sprite + '#icon-x'} />\n              </svg> \n           </SvgButton>\n\n           <ContainerImg>\n            <Img src={imgURL} alt={title} />\n\n            <Svg>Sell</Svg>            \n           </ContainerImg>\n     \n\n\n           <Title>{title}</Title>\n\n           <ContainerPopulate>\n                 <svg width={16} height={16}>\n                    <use xlinkHref={sprite + '#icon-star'} />\n                 </svg>      \n                 <Rating>{popularity}</Rating>          \n              </ContainerPopulate>\n              <ContainerList>\n\n                 <li>\n                    <TitleTable>Name</TitleTable>\n                    <Text>{name}</Text>\n                 </li>\n                 <li>\n                    <TitleTable>Birthday</TitleTable>\n                    <Text>{birthday}</Text>\n                 </li>\n                 <li>\n                    <TitleTable>Sex</TitleTable>\n                    <Text>{sex}</Text>\n                 </li>\n                 <li>\n                    <TitleTable>Species</TitleTable>\n                    <Text>{species}</Text>\n                 </li>\n              </ContainerList>\n\n              <Comment>{comment}</Comment>\n\n              <ContainerButton>\n                <ButtonAdd type=\"button\"> Add to\n                     <svg width={16} height={16}>\n                         <use xlinkHref={sprite + '#icon-heart-3'} />\n                     </svg>  \n                </ButtonAdd>\n                <ButtonContact type=\"button\">Contact</ButtonContact>\n              </ContainerButton>\n    \n  </Container>\n  \n        </Modal> \n        </>\n      );\n    }; ","import sprite from '../../images/sprite.svg';\nimport {Button,Title, Img, ContainerList, ContainerTitle, ContainerPopulate,\n        Rating, TitleTable, Comment, ContainerButton, ContainerItem, ButtonSVG\n} from './NoticeItrm.styled';\nimport {ModalAttention} from '../ModalAttention/ModalAttention';\nimport {ModalNotice} from '../ModalNotice/ModalNotice';\nimport { useState } from 'react';\n \nexport const NoticesItem=({notice})=>{\n\n    const {imgURL ,title, popularity, comment, name, birthday, species, category, sex}=notice;\n    const [isOpenModalAttention, setIsOpenModalAttention ] =useState(false);\n    const [isOpenModalNotice, setIsOpenModalNotice ] =useState(false);\n\n    const openModalAttention=()=>{\n        setIsOpenModalAttention(true);\n    }\n\n    const openModalNotice=()=>{\n        setIsOpenModalNotice(true);\n    }\n\n    return(\n        <ContainerItem>\n            <Img src= {imgURL} alt={title}/>\n           <ContainerTitle>\n              <Title>{title}</Title>\n              <ContainerPopulate>\n                 <svg width={16} height={16}>\n                    <use xlinkHref={sprite + '#icon-star'} />\n                 </svg>      \n                 <Rating>{popularity}</Rating>          \n              </ContainerPopulate>\n            </ContainerTitle>  \n\n            <ContainerList>\n\n                <li>\n                    <TitleTable>Name</TitleTable>\n                    <p>{name}</p>\n                </li>\n                <li>\n                    <TitleTable>Birthday</TitleTable>\n                    <p>{birthday}</p>\n                </li>\n                <li>\n                    <TitleTable>Sex</TitleTable>\n                    <p>{sex}</p>\n                </li>\n                <li>\n                    <TitleTable>Species</TitleTable>\n                    <p>{species}</p>\n                </li>\n                <li>\n                    <TitleTable>Category</TitleTable>\n                    <p>{category}</p>\n                </li>\n                 \n            </ContainerList>\n            \n           <Comment>{comment}</Comment>\n           <ContainerButton>\n            \n               <Button type='button' onClick={openModalAttention}>Learn more</Button>\n               \n               <ButtonSVG onClick={openModalNotice}>\n                   <svg width={18} height={18}>\n                      <use xlinkHref={sprite + '#icon-heart'} />\n                   </svg>                \n               </ButtonSVG>\n\n           </ContainerButton>\n\n           <ModalAttention isOpenModalAttention={isOpenModalAttention} setIsOpenModalAttention={setIsOpenModalAttention}/>\n           <ModalNotice notice={notice} isOpenModalNotice={isOpenModalNotice} setIsOpenModalNotice={setIsOpenModalNotice}/>\n        \n        </ContainerItem>\n    )\n}","import styled from \"styled-components\";\n\n\nexport const Container = styled.ul`\n\nlist-style: none;\n\ndisplay: grid;\n    grid-template-columns: 1fr;\n    gap: 16px;\n\n    @media (min-width: 768px) and (max-width: 1279px) {\n        grid-template-columns: 1fr 1fr;  /* 2 изображения на строку */\n    }\n\n    @media (min-width: 1280px) {\n        grid-template-columns: 1fr 1fr 1fr;  /* 3 изображения на строку */\n    }\n`\n\n","import {NoticesItem} from '../NoticesItem/NoticesItem';\nimport {Container} from './NoticeList.styled';\n\n\nexport const NoticesList=({notices})=>{\n\n    return (\n        <Container>\n\n            {notices?.map(iterm=>( \n            <NoticesItem key={iterm._id} notice={iterm}/>\n        ))}\n        \n        </Container>\n    )\n}","import styled from \"styled-components\";\nimport { Field} from 'formik';\n\nexport const Container = styled.div`\nmargin-bottom: ${p=>p.theme.spacing(10)};\npadding: ${p=>p.theme.spacing(4)};\nborder-radius: 30px;\nbackground-color: #FFF4DF;\n`\n\n\nexport const ContainerTabletSelect = styled.div`\n@media (min-width: 768px) {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px; \n    justify-content: start;\n    align-items: center;\n}\n\n     @media (min-width: 1280px) {\n      flex-wrap: nowrap;\n    } \n`\n\nexport const ContainerSelect = styled.div`\ndisplay: flex;\ngap: ${p=>p.theme.spacing(2)};\nmargin-bottom: ${p=>p.theme.spacing(4)};\n/* width: 100%; */\n\nflex-basis: 55%; \n\n@media (min-width: 1280px) {\nflex-basis: 50%; \nmargin-bottom:0%;\n}\n`\n\nexport const CustomSelect = styled(Field)`\n  width: 100%;\n  height: 42px;\n  padding: 0 12px;\n  border-radius: 30px;\n  border: none;\n\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n  letter-spacing: -0.03em;\n  color: #262626;\n\n  &:focus {\n    outline: none;\n    color: ${(p) => p.theme.colors.yellow};\n  }\n\n  &:hover {\n    color: #26262699;\n    border: 1px solid #F6B83D;\n  }\n\n  @media (min-width: 768px) {\nflex-basis: 50%; \n}\n`;\n\nexport const CustomSelectType = styled(Field)`\n  width: 100%;\n  height: 42px;\n  padding: 0 12px;\n  border-radius: 30px;\n  border: none;\n\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n  letter-spacing: -0.03em;\n  color: #262626;\n\n  &:focus {\n    outline: none;\n    color: ${(p) => p.theme.colors.yellow};\n  }\n\n  &:hover {\n    color: #26262699;\n    border: 1px solid #F6B83D;\n  }\n\n  @media (min-width: 768px) {\nflex-basis: 30%; \n}\n`;\n\nexport const Option = styled.option`\n\n  border: none;\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n  letter-spacing: -0.03em;\n  color: #26262699;\n\n  &:hover {\n    color: ${(p) => p.theme.colors.yellow};\n  }\n`;\n\nexport const ContainerSvg = styled.div`\nposition: relative;\nalign-items: center;\n  margin-top: 20px;\n@media (min-width: 768px) {\n  flex-basis: 30%; \n  height: 48px;\n  margin-top: 0;\n}\n`\n\nexport const Svg = styled.svg`\nposition: absolute;\ntop: 25%;\nright: 10px;\n\nwidth: 18px;\nheight: 18px;\ncursor: pointer;\nfill: currentColor;\n`\n\nexport const SvgReset = styled.svg`\nposition: absolute;\ntop: 25%;\nright: 40px;\n\nwidth: 18px;\nheight: 18px;\ncursor: pointer;\nfill: currentColor;\n`\n\nexport const Reset = styled.svg`\nposition: absolute;\ntop: 25%;\nright: 5px;\n\nwidth: 18px;\nheight: 18px;\ncursor: pointer;\nfill: currentColor;\n`\n\nexport const Straight = styled.div`\nmargin-top: ${(p) => p.theme.spacing(2)};\nmargin-bottom: ${(p) => p.theme.spacing(4)};\nwidth: 100%;\nborder: 1px solid #2626261A;\n`\n\nexport const RadioGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const RadioButtonLabel = styled.label`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px 30px;\n  border: none;\n  border-radius: 30px;\n  background-color: ${(p) => p.theme.colors.white};\n  cursor: pointer;\n\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1,29;\n  letter-spacing: -0.03em;\n  text-align: left;\n\n  color: #262626;\n\n  &:hover {\n    background-color: ${(p) => p.theme.colors.yellow};\n    color:${(p) => p.theme.colors.white};\n  }\n`;\n\nexport const RadioButton = styled(Field)`\n \n  display: none;\n\n  &:checked + ${RadioButtonLabel} {\n    background-color: ${(p) => p.theme.colors.yellow};\n    color: ${(p) => p.theme.colors.white};\n  }\n`;","import {Container,ContainerTabletSelect, ContainerSelect, CustomSelect, CustomSelectType,\n        Option, ContainerSvg, Svg, SvgReset, Reset, Straight,\n        RadioGroup, RadioButtonLabel, RadioButton} from './NoticesFilters.styled';\nimport { SearchField } from \"components/SearchField/SearchField\";\nimport Select from 'react-select';\nimport { Formik, Form} from 'formik';\nimport { useEffect, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport axios from 'axios';\nimport sprite from '../../images/sprite.svg';\n\naxios.defaults.baseURL = \"https://petlove.b.goit.study/api\";\n\n\nexport const NoticesFilters=({fetch})=>{\n     // const dispatch = useDispatch();\n    const [iscategories, setCategories] = useState([]);\n    const [isgenders, setGenders] = useState([]);\n    const [ispetTypes, setPetTypes] = useState([]);\n    const [islocations, setLocations] = useState([]);\n    const [selectedLocation, setSelectedLocation] = useState(null);\n    const [selectedSort, setSelectedSort] = useState(null);\n\n    // const getFilter = () => {\n    //   return {\n    //     categories: iscategories,\n    //     genders: isgenders,\n    //     petTypes: ispetTypes,\n    //     locations: islocations,\n    //   };\n    // };\n\n  //   const handlCategories = (e)=>{\n  //     setCategories(e.target.value)\n  //     return dispatch(addFilter({...getFilter(), categories: e.target.value}))\n  // }\n\n  // const handleCategoriesChange = (e) => {\n  //   setCategories(e.target.value);\n  // };\n\n  // const handleGendersChange = (e) => {\n  //   setGenders(e.target.value);\n  // };\n\n  const handleResetClick = (resetForm) => {\n    resetForm();\n    setSelectedLocation(null);\n    setSelectedSort(null); \n};\n         \n      useEffect(() => {\n        const fetchData = async () => {\n          const categoriesResponse = await axios.get('/notices/categories');\n          const gendersResponse = await axios.get('/notices/sex');\n          const petTypesResponse = await axios.get('/notices/species');\n          const locationsResponse = await axios.get('/cities');\n    \n          setCategories(categoriesResponse.data);\n          setGenders(gendersResponse.data);\n          setPetTypes(petTypesResponse.data);\n          setLocations(locationsResponse.data);\n        };\n    \n        fetchData();\n      }, []);\n\n      const locationOptions = islocations.map(location => ({\n        value: location._id,\n        label: `${location.stateEn}, ${location.cityEn}, ${location.countyEn}`\n      }));\n\n\n      const customStyles = {\n        control: (provided, state) => ({\n          ...provided, \n       \n          borderRadius: '30px',\n          border: 'none',\n          height: '42px',\n          padding: '0 12px',\n          fontFamily: 'Manrope',\n          fontSize: '14px',\n          fontWeight: '500',\n          lineHeight: '1.29',\n          letterSpacing: '-0.03em',\n          color: '#262626',\n          boxShadow: state.isFocused ? '0 0 0 1px #F6B83D' : provided.boxShadow,\n      '&:hover': {\n        border: '1px solid #F6B83D',\n      },\n        }),\n        option: (provided, state) => ({\n          ...provided,\n        \n          borderRadius: '15px',\n          border: 'none',\n          padding: '0 12px',\n          fontFamily: 'Manrope',\n          fontSize: '14px',\n          fontWeight: '500',\n          lineHeight: '1.29',\n          letterSpacing: '-0.03em',\n          color: state.isSelected ? '#fff' : '#26262699',\n          backgroundColor: state.isSelected ? '#262626' : '#fff',\n          '&:hover': {\n            color: '#262626',\n          },\n        }),\n        placeholder: (provided) => ({\n          ...provided,\n          color: '#262626',\n        }),\n        singleValue: (provided) => ({\n          ...provided,\n          color: '#262626',\n        }),\n        dropdownIndicator: (provided) => ({\n          ...provided,\n          display: 'none', \n        }),\n        indicatorSeparator: (provided) => ({\n          ...provided,\n          display: 'none', \n        }),\n      };\n\n      const formatOptionLabel = ({ label }, { inputValue }) => {\n        if (!inputValue) return label;\n      \n        const highlightedText = label.substring(0, inputValue.length);\n        const restOfText = label.substring(inputValue.length);\n      \n        return (\n          <>\n            <span style={{ color: '#262626' }}>{highlightedText}</span>\n            <span style={{ color: '#26262666' }}>{restOfText}</span>\n          </>\n        );\n      };\n\n      return(\n        <Formik       \n         initialValues={{\n           search: '',\n           category: '',\n           gender: '',\n           petType: '',\n           location: '',\n           sortBy: '',\n      }} \n\n      onSubmit={(values, actions) => {       \n        // dispatch(addReservation(values))     \n        //  fetch(values);\n         actions.resetForm();}\n      }>\n\n{({ resetForm, setFieldValue }) => (\n        <Form>\n          <Container>\n        \n            <ContainerTabletSelect>    \n                <SearchField name=\"search\" fetch={fetch} setFieldValue={(value) => setFieldValue('search', value)}/> \n             <ContainerSelect>\n\n              <CustomSelect as=\"select\" id = \"category\" name=\"category\" >\n                 <Option value=\"\">Category</Option>\n                  {iscategories.map(category => (\n                            <Option  key={nanoid()} value={category}>\n                                {category}\n                            </Option>\n                        ))}\n              </CustomSelect>\n              <CustomSelect as=\"select\" name=\"gender\" >\n                  <Option value=\"\">By gender</Option>\n                        {isgenders.map((gender) => (\n                             <Option key={nanoid()} value={gender}>\n                                 {gender}\n                             </Option>\n                         ))}\n              </CustomSelect>\n\n          </ContainerSelect> \n       \n                   <CustomSelectType as=\"select\" name=\"byTypes\">\n                        <Option value=\"\">By type</Option>\n                        {ispetTypes.map((byType) => (\n                            <option key={nanoid()} value={byType}>\n                                {byType}\n                            </option>\n                             ))}\n                  </CustomSelectType>  \n            \n          <ContainerSvg>\n               <Select\n                name=\"location\"\n                defaultValue={islocations}\n                placeholder=\"Location\"\n                styles={customStyles}\n                formatOptionLabel={formatOptionLabel}\n                options={locationOptions}\n                onChange={(option) => {\n                  setSelectedLocation(option);\n                  setFieldValue('location', option.value);\n                }}\n                  /> \n                  \n          <button type='submit'>\n             <Svg >\n                <use xlinkHref={sprite + '#icon-search'}/>\n              </Svg  >           \n           </button >\n\n           {selectedLocation   &&   <SvgReset onClick = {() => handleResetClick(resetForm)}>\n                <use xlinkHref={sprite + '#icon-x'}/>\n            </SvgReset> }\n\n            </ContainerSvg>\n           </ContainerTabletSelect>   \n\n            <Straight></Straight>\n\n            <RadioGroup role=\"group\" aria-labelledby=\"sort-group\">\n               <RadioButton type=\"radio\" \n                            name=\"sort\" \n                            value=\"popularity\" \n                            id=\"popularity\" \n                            onChange={() => setSelectedSort('popularity')}\n                            checked={selectedSort === 'popularity'}/>\n                  <RadioButtonLabel htmlFor=\"popularity\">\n                    Popular\n                    {selectedSort === 'popularity' && (\n                  <Reset onClick={() => handleResetClick(resetForm)}>\n                    <use xlinkHref={sprite + '#icon-x-1'} />\n                  </Reset>\n                )}</RadioButtonLabel>\n\n               <RadioButton type=\"radio\" \n                            name=\"sort\" \n                            value=\"unpopularity\" \n                            id=\"unpopularity\" \n                            onChange={() => setSelectedSort('unpopularity')}\n                            checked={selectedSort === 'unpopularity'}/>\n                  <RadioButtonLabel htmlFor=\"unpopularity\">\n                    Unpopular\n                    {selectedSort === 'unpopularity' && (\n                  <Reset onClick={() => handleResetClick(resetForm)}>\n                    <use xlinkHref={sprite + '#icon-x-1'} />\n                  </Reset>\n                )}\n                  </RadioButtonLabel>\n\n                <RadioButton type=\"radio\" \n                             name=\"sort\" \n                             value=\"lowprice\" \n                             id=\"lowprice\" \n                             onChange={() => setSelectedSort('lowprice')}\n                             checked={selectedSort === 'lowprice'}/>\n                  <RadioButtonLabel htmlFor=\"lowprice\">\n                    Cheap\n                    {selectedSort === 'lowprice' && (\n                    <Reset onClick={() => handleResetClick(resetForm)}>\n                      <use xlinkHref={sprite + '#icon-x-1'} />\n                    </Reset>\n                    )}\n                  </RadioButtonLabel>\n\n                <RadioButton type=\"radio\" \n                             name=\"sort\" \n                             value=\"highprice\" \n                             id=\"highprice\" \n                             onChange={() => setSelectedSort('highprice')}\n                             checked={selectedSort === 'highprice'}/>\n                  <RadioButtonLabel htmlFor=\"highprice\">\n                    Expensive\n                    {selectedSort === 'highprice' && (\n                    <Reset onClick={() => handleResetClick(resetForm)}>\n                      <use xlinkHref={sprite + '#icon-x-1'} />\n                    </Reset>\n                    )}\n                  </RadioButtonLabel>\n            </RadioGroup>\n\n          </Container> \n          </Form>\n      )}\n        </Formik>\n)\n}\n      \n//             <SearchField fetch={fetch}/>\n        \n//      <SearchField setFieldValue={(value) => setFieldValue('search', value)} />\n                    \n                    \n","import { Title } from \"components/Title/Title\";\nimport { Pagination } from \"components/Pagination/Pagination\";\nimport {fetchnotices, fetchnoticesByKeyword} from '../../redux/operations';\nimport {NoticesList} from '../../components/NoticesList/NoticesList';\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {selectorNotices} from '../../redux/selects';\nimport {NoticesFilters} from '../../components/NoticesFilters/NoticesFilters';\n\nexport default function Notices(){\n    const dispatch=useDispatch();\n    const [isPageNumber, setIsPageNumber] = useState(1);\n    const notices = useSelector(selectorNotices);\n\n    const handleChangeNewPage=(number)=>{\n        setIsPageNumber(number);\n    }\n\n    useEffect(()=>{\n      dispatch(fetchnotices(isPageNumber))\n    }, [dispatch, isPageNumber])\n    return(\n        <>\n        <Title name=\"Find your favorite pet\"/>\n        <NoticesFilters fetch={fetchnoticesByKeyword}/>\n        <NoticesList notices={notices}/>\n        <Pagination handleChangeNewPage={handleChangeNewPage} currentPage={isPageNumber}/>\n\n        </>\n    )\n}","import styled from \"styled-components\";\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\nimport { RiArrowLeftDoubleFill, RiArrowRightDoubleFill } from 'react-icons/ri';\n\nexport const Container = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\ngap: 6px;\n`\n\nexport const Button = styled.button`\ndisplay: block;\nwidth: 40px;\nheight: 40px;\nborder-radius: 50%;\ncursor: pointer;\nfill: currentColor;\nborder: 1px solid #2626260D;\ntext-align: center;\n\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 700;\nline-height: 1,29;\ncolor: #262626;\n\n\n&:hover{\n    background-color: ${p => p.theme.colors.yellow};\n    color:   ${p => p.theme.colors.white};\n\n}\n`\nexport const ButtonNext = styled.button`\ndisplay: block;\nwidth: 40px;\nheight: 40px;\nborder-radius: 50%;\ncursor: pointer;\n/* fill: currentColor; */\nborder: 1px solid #2626260D;\ntext-align: center;\nfont-size: 20px;\n\n&:hover{\n    color:  #262626;\n    border: 1px solid #26262633;\n}\n`\n\nexport const StyledRiArrowLeftDoubleFill = styled(RiArrowLeftDoubleFill)`\n  color: #26262680;\n  font-size: 20px;\n\n  &:hover {\n    color: #262626;\n  }\n`;\n\nexport const StyledIoIosArrowBack = styled(IoIosArrowBack)`\n  color: #26262680;\n  font-size: 20px;\n\n  &:hover {\n    color: #262626;\n  }\n`;\n\nexport const StyledIoIosArrowForward = styled(IoIosArrowForward)`\n  color: #26262680;\n  font-size: 20px;\n\n  &:hover {\n    color: #262626;\n  }\n`;\n\nexport const StyledArrowRightDoubleFill = styled(RiArrowRightDoubleFill)`\n  color: #26262680;\n  font-size: 20px;\n\n  &:hover {\n    color: #262626;\n  }\n`;","import { useSelector } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport {selectorTotalPages} from '../../redux/selects';\nimport {Container, Button, ButtonNext, StyledRiArrowLeftDoubleFill, \n        StyledIoIosArrowBack, StyledIoIosArrowForward, StyledArrowRightDoubleFill } from './Pagination.styled';\n\n\nexport const Pagination=({handleChangeNewPage, currentPage})=>{\n  const totalPages=useSelector(selectorTotalPages);\n\n  const isMobile = useMediaQuery({ query: '(max-width: 767px)' });\n\n  const visiblePages = isMobile ? 2 : 3;\n\n  const generatePageNumbers = () => {\n    let startPage = Math.max(1, currentPage - Math.floor(visiblePages / 2));\n    let endPage = Math.min(totalPages, startPage + visiblePages - 1);\n\n    if (endPage - startPage < visiblePages - 1) {\n        startPage = Math.max(1, endPage - visiblePages + 1);\n    }\n\n    const pages = [];\n    for (let i = startPage; i <= endPage; i++) {\n        pages.push(i);\n    }\n\n    return pages;\n}\n\nconst pages = generatePageNumbers();\n\n    return(\n<>\n     {totalPages > 1 && (\n        <Container>\n        \n            <ButtonNext onClick={()=>handleChangeNewPage(1)} \n                        disabled={currentPage === 1}\n                        type='buton'>  \n                        <StyledRiArrowLeftDoubleFill /> \n           </ButtonNext>\n\n           <ButtonNext onClick={()=>handleChangeNewPage(currentPage-1)}\n                       disabled={currentPage === 1}\n                       type='buton'> \n                       <StyledIoIosArrowBack/> \n           </ButtonNext>  \n\n           {pages[0] > 1 && <Button>...</Button>}\n            \n            {pages.map((page) => (\n                <Button \n                    key={page} \n                    type='button' \n                    onClick={() => handleChangeNewPage(page)}\n                >\n                    {page}\n                </Button>\n            ))}\n\n            {pages[pages.length - 1] < totalPages && <Button>...</Button>}\n          \n           <ButtonNext onClick={()=>handleChangeNewPage(currentPage+1)}\n                       disabled={currentPage === totalPages}\n                       type='buton'>\n                       <StyledIoIosArrowForward/> \n           </ButtonNext>\n\n           <ButtonNext onClick={()=>handleChangeNewPage(totalPages)} \n                       disabled={currentPage === totalPages}\n                       type='buton'>\n                       <StyledArrowRightDoubleFill/>\n           </ButtonNext> \n\n        </Container>\n       )}\n</>\n\n    )\n}\n\n\n\n\n\n// <Button type='buton'> &laquo; </Button>\n// <Button type='buton'>&lsaquo;</Button>  \n// <Button type='buton'>1</Button>\n// <Button type='buton'>2</Button>\n// <Button type='buton'>3</Button>\n// <Button type='buton'>&rsaquo;</Button>\n// <Button type='buton'>&raquo;</Button> \n\n\n          // {/* <PaginationList\n          //   previousLabel={<IoIosArrowBack />}\n          //   nextLabel={<IoIosArrowForward />}\n          //   breakLabel={'...'}\n          //   firstLabel={<RiArrowLeftDoubleFill />}\n          //   lastLabel={<RiArrowRightDoubleFill />}         \n          //   // pageCount={totalPages}\n          //   marginPagesDisplayed={2}\n          //   pageRangeDisplayed={5}\n          //   onPageChange={handlePageChange}\n          //   containerClassName={'pagination'}\n          //   pageClassName={'page-item'}\n          //   pageLinkClassName={'page-link'}\n          //   previousClassName={'page-item'}\n          //   previousLinkClassName={'page-link'}\n          //   nextClassName={'page-item'}\n          //   nextLinkClassName={'page-link'}\n          //   breakClassName={'page-item'}\n          //   breakLinkClassName={'page-link'}\n          //   activeClassName={'active'}\n\n          // /> */}","import styled from 'styled-components';\n\nexport const Container = styled.div`\nposition: relative;\n@media (min-width: 768px) {\n    width: 230px;\n    \n  }\n`\nexport const Input = styled.input`\nmargin-bottom: ${p=>p.theme.spacing(3)};\npadding-left : ${p=>p.theme.spacing(3)};\nwidth: 100%;\nheight: 42px;\n\nfont-family: Manrope;\nfont-size: 16px;\nfont-weight: 500;\nline-height: 1,25;\nletter-spacing: -0.03em;\ntext-align: left;\n\nborder-radius: 30px;\nborder: 1px solid #26262626;\n\n&::placeholder {\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29;\ncolor: rgba(38, 38, 38, 0.5);\n  }\n\n  &:hover {\n    border: 1px solid ${p=>p.theme.colors.yellow}\n  }\n\n  @media (min-width: 768px) {\n    width: 230px;\n    height: 48px;\n  }\n\n  @media (min-width: 1280px) {\n   margin-bottom:0;\n  }\n\n  \n`\n\nexport const Svg = styled.svg`\nposition: absolute;\ntop: 25%;\nright: 10px;\n\nwidth: 18px;\nheight: 18px;\ncursor: pointer;\nfill: currentColor;\n`\n\nexport const SvgReset = styled.svg`\nposition: absolute;\ntop: 25%;\nright: 40px;\n\nwidth: 18px;\nheight: 18px;\ncursor: pointer;\nfill: currentColor;\n`","import React, { useState } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport {Container, Input, Svg, SvgReset} from './SearchField.styled';\nimport { useDispatch } from 'react-redux';\n\nexport const SearchField =({fetch})=>{\n  const dispatch =  useDispatch();\n    const [searchValue, setSearchValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setSearchValue(e.target.value);\n    };\n\n    const handleResetClick = () => {\n        setSearchValue('');\n    };\n\n    const handleSubmit = (evt) => {\n      evt.preventDefault();\n      dispatch(fetch({ keyword: searchValue, pageNumber: 1}));\n      handleResetClick();\n  };\n\n//   useEffect(() => {\n//       if (searchValue) {\n//           dispatch(fetchNewsByKeyword({ keyword: searchValue, pageNumber:1 }));\n//       }\n//   }, [dispatch, searchValue]);\n\n\n    return(\n        <Container onClick = {handleSubmit}>\n           <Input placeholder=\"Search\"\n           name='name'\n           type='text'\n           value={searchValue}\n           onChange={handleInputChange}/>\n\n           <button type='submit'>\n             <Svg >\n                <use xlinkHref={sprite + '#icon-search'}/>\n              </Svg  >           \n           </button>\n\n           {searchValue  &&   <SvgReset onClick = {handleResetClick}>\n                <use xlinkHref={sprite + '#icon-x'}/>\n            </SvgReset> }\n\n        </Container>\n    )\n}\n\n","import styled from 'styled-components';\n\nexport const TitleLogin = styled.h1`\nmargin-bottom : ${p=>p.theme.spacing(2)};\nfont-family: Manrope;\nfont-size: 28px;\nfont-weight: 700;\nline-height: 1;\nletter-spacing: -0.04em;\ntext-align: left;\ncolor: #262626;\n\n@media (min-width: 768px) {\nfont-size: 54px;\n}\n`","import {TitleLogin} from './title.styled';\n\nexport const Title =({name})=>{\n    return(\n      \n        <TitleLogin>{name}</TitleLogin>\n    \n    )\n}","import { createSelector } from \"@reduxjs/toolkit\";\n\n  export const selectContacts=state=>state.contact.items;\n  export const selectFilter=state => state.filter;\n  export const selectIsLoading=state=> state.contact.isLoading;\n  export const selectError=state=>state.contact.error;\n  export const selectorNews=state=>state.news.news;\n  export const selectorTotalPages=state=>state.news.totalPages;\n  export const selectorTotPages=state=>state.notices.totalPages;\n  export const selectorNotices=state=>state.notices.notices;\n\n\n  export const selectVisibleContacts = createSelector(\n    [ selectContacts, selectFilter],\n     (contact, filter) => {\n       return contact.filter(contacts => contacts.name.toLowerCase()\n        .includes(filter.toLowerCase()))\n     }\n    )\n\n\n\n\n"],"names":["ContainerItem","styled","_templateObject","_taggedTemplateLiteral","Img","_templateObject2","Title","_templateObject3","Rating","_templateObject4","ContainerList","_templateObject5","ContainerTitle","_templateObject6","ContainerPopulate","_templateObject7","TitleTable","_templateObject8","Comment","_templateObject9","_templateObject10","ContainerButton","_templateObject11","Button","_templateObject12","p","theme","colors","yellow","white","ButtonSVG","_templateObject13","Container","SvgButton","ContainerSvg","spacing","Text","Modal","ModalAttention","_ref","isOpenModalAttention","setIsOpenModalAttention","useEffect","document","body","classList","add","remove","_jsx","_Fragment","children","isOpen","onRequestClose","style","overlay","backgroundColor","content","top","left","right","bottom","marginRight","transform","padding","maxWidth","maxHeight","borderRadius","contentLabel","_jsxs","onClick","width","height","xlinkHref","sprite","src","alt","AuthNav","ContainerImg","Svg","ButtonAdd","_templateObject14","ButtonContact","_templateObject15","rose","ModalNotice","isOpenModalNotice","setIsOpenModalNotice","notice","imgURL","title","popularity","comment","name","birthday","species","sex","type","NoticesItem","category","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","NoticesList","notices","map","iterm","_id","ContainerTabletSelect","ContainerSelect","CustomSelect","Field","CustomSelectType","Option","SvgReset","Reset","Straight","RadioGroup","RadioButtonLabel","RadioButton","axios","NoticesFilters","fetch","iscategories","setCategories","isgenders","setGenders","_useState5","_useState6","ispetTypes","setPetTypes","_useState7","_useState8","islocations","setLocations","_useState9","_useState10","selectedLocation","setSelectedLocation","_useState11","_useState12","selectedSort","setSelectedSort","handleResetClick","resetForm","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","categoriesResponse","gendersResponse","petTypesResponse","locationsResponse","_context","prev","next","sent","data","stop","apply","arguments","locationOptions","location","value","label","concat","stateEn","cityEn","countyEn","customStyles","control","provided","state","_objectSpread","border","fontFamily","fontSize","fontWeight","lineHeight","letterSpacing","color","boxShadow","isFocused","option","isSelected","placeholder","singleValue","dropdownIndicator","display","indicatorSeparator","formatOptionLabel","_ref3","_ref4","inputValue","highlightedText","substring","length","restOfText","Formik","initialValues","search","gender","petType","sortBy","onSubmit","values","actions","_ref5","setFieldValue","Form","SearchField","as","id","nanoid","byType","Select","defaultValue","styles","options","onChange","role","checked","htmlFor","Notices","dispatch","useDispatch","isPageNumber","setIsPageNumber","useSelector","selectorNotices","fetchnotices","fetchnoticesByKeyword","Pagination","handleChangeNewPage","number","currentPage","ButtonNext","StyledRiArrowLeftDoubleFill","RiArrowLeftDoubleFill","StyledIoIosArrowBack","IoIosArrowBack","StyledIoIosArrowForward","IoIosArrowForward","StyledArrowRightDoubleFill","RiArrowRightDoubleFill","totalPages","selectorTotalPages","visiblePages","useMediaQuery","query","pages","startPage","Math","max","floor","endPage","min","i","push","generatePageNumbers","disabled","page","Input","searchValue","setSearchValue","evt","preventDefault","keyword","pageNumber","e","target","TitleLogin","selectContacts","contact","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectorNews","news","selectVisibleContacts","createSelector","contacts","toLowerCase","includes"],"sourceRoot":""}