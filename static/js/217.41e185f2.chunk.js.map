{"version":3,"file":"static/js/217.41e185f2.chunk.js","mappings":"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","sources":["Pages/AddPet/AddPet.styled.js","Pages/AddPet/AddPet.js","components/PetBlock/PetBlock.styled.js","components/PetBlock/PetBlock.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerForm = styled.form` \npadding:  ${p=>p.theme.spacing(4)};\n`\n\nexport const Title = styled.label` \nfont-family: Manrope;\nfont-size: 28px;\nfont-weight: 700;\nline-height: 1px;\nletter-spacing: -0.03em;\ncolor: #262626;\n`\n\nexport const TitleSpan = styled.span` \nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 700;\nline-height: 1,29px;\ncolor: #2B2B2A66;\n`\n\nexport const RadioGroup = styled.div`\n  display: flex;\n  gap: ${p=>p.theme.spacing(2)};\n  margin-bottom: 16px;\n  margin-top: 20px;\n`;\n\nexport const SvgIcon = styled.svg`\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n`;\n\nexport const Error = styled.span`\nfont-family: Manrope;\nfont-size: 12px;\nfont-weight: 500;\nline-height: 1,16;\nletter-spacing: -0.03em;\n\n  color: #EF2447;\n  margin-bottom: 8px;\n`;\n\nexport const ButtonSubmit = styled.button` \ndisplay: block;\nmargin: 0 auto;\nmargin-bottom: 20px;\nborder-radius: 50%;\n\n&:hover{\n   border: 3px solid #FBE7C1;\n}\n`\nexport const ContainerInput = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 16px;\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const Input = styled.input`\nwidth: 100%;\n  margin-bottom: 5px;\n  padding: 9px 20px;\n  gap: 10px;\n  border-radius: 30px;\n  border: 1px solid #26262626;\n  outline: none;\n  \n  &::placeholder {\n    color: rgba(38, 38, 38, 0.5);\n  }\n\n  &:hover {\n    border: 1px solid ${p => p.theme.colors.yellow};\n  }\n`;\n\n\nexport const ButtonLoad = styled.button` \ndisplay: flex;\njustify-content: center;\nalign-items: center;\nwidth: 50%;\nheight: 36px;\npadding: 10px;\ngap: 5px;\nborder-radius: 30px;\nborder:none;\n\nbackground-color: #FFF4DF;\n\n&:hover{\n    background-color: #FBE7C1;\n}\n`\nexport const ButtonLoadSpan = styled.span` \nfont-family: Manrope;\nfont-size: 12px;\nfont-weight: 500;\nline-height: 1,33;\nletter-spacing: -0.02em;\ncolor: #262626;\n`\n\nexport const SuccessMessage = styled.p`\n  margin-left: 10px;\n  font-family: Manrope;\n  font-size: 10px;\n  font-weight: 500;\n  line-height: 1.2;\n  letter-spacing: -0.03em;\n  text-align: left;\n  color: #08AA83;\n`;\n\nexport const WrapperSelect = styled.div`\nposition: relative;\n width: 100%;\n`;\n\nexport const SvgCalendar = styled.svg`\nposition: absolute;\ntop: 25%;\nright: 10px;\n\n`;\n\nexport const WrapperButton = styled.div`\ndisplay: flex;\ngap: ${p => p.theme.spacing(2)};\njustify-content: end;\n`;\n\nexport const Button = styled.button`\nwidth: 100px;\nheight: 42px;\npadding: 12px 34px 12px 34px;\ngap: 10px;\nborder-radius: 30px;\nbackground: #2626260D;\n\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 700;\nline-height: 1,29;\nletter-spacing: -0.03em;\ncolor: #262626;\n\n&:hover {\n  background-color: ${p => p.theme.colors.yellow};\n  color: ${p => p.theme.colors.white};\n}\n`;\n\n\n\n\n// export const Select = styled.select`\n//   margin-bottom: 5px;\n//   padding: 9px 20px;\n//   gap: 10px;\n//   width: 100%;\n//   border-radius: 30px;\n//   border: 1px solid #26262626 ;\n//   /* ${props => {\n//      if (props.$isError === true) {return '#08AA83'};\n//      if (props.$isError=== false) {return '#EF2447'};\n   \n\n//   }}; */\n//   outline: none;\n\n//   &::placeholder {\n//     color: #26262680; \n//   }\n// `;\n\n// export const Option = styled.option`\n//    color: #26262699;\n//    border: 1px solid #26262626;\n//    color: ${props => (props.value === '' ? '#26262680' : '#26262699')}; \n\n//    &:first-child {\n//     color: #26262680; \n//   }\n// `;\n\n\n","import { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\n// import { useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { nanoid } from 'nanoid';\nimport Select from 'react-select';\n\nimport {PetBlock} from '../../components/PetBlock/PetBlock';\nimport DogAddMobile1 from '../../images/DogAddMobile1.jpg';\nimport DogAddMobile2 from '../../images/DogAddMobile2.jpg';\nimport DogAddMobile3 from '../../images/DogAddMobile3.jpg';\nimport DogAddTablet1 from '../../images/DogAddTablet1.jpg';\nimport DogAddTablet2 from '../../images/DogAddTablet2.jpg';\nimport DogAddTablet3 from '../../images/DogAddTablet3.jpg';\nimport DogAddDesctop1 from '../../images/DogAddDesctop1.jpg';\nimport DogAddDesctop2 from '../../images/DogAddDesctop2.jpg';\nimport DogAddDesctop3 from '../../images/DogAddDesctop3.jpg';\nimport {Title, TitleSpan, ContainerForm, ButtonSubmit, RadioGroup, \n        SvgIcon, Error, ContainerInput, InputWrapper, Input, ButtonLoad,\n        ButtonLoadSpan,SuccessMessage, WrapperSelect, SvgCalendar, \n        WrapperButton, Button } from './AddPet.styled';\nimport sprite from '../../images/sprite.svg';\n\n\nconst SignupSchema = Yup.object().shape({\n    title: Yup.string().required('Required'),\n    name: Yup.string().required('Required'),\n    species: Yup.string().required('Required'),\n    sex: Yup.string().required('Required'),\n    birthday: Yup.string()\n                 .matches(/^\\d{4}-\\d{2}-\\d{2}$/,'Enter a valid Birthday')\n                 .required('Required'),\n    imgUrl: Yup.string()\n              .matches(/^https?:\\/\\/.*\\.(?:png|jpg|jpeg|gif|bmp|webp)$/,'Enter a valid Url')\n              .required('Required'),\n});\n\n\nexport default function AddPet (){\n  const customStyles = {\n    placeholder: (provided) => ({\n      ...provided,\n      color: '#26262680', // Колір для placeholder\n    }),\n    control: (provided, state) => ({\n      ...provided,\n      borderRadius: '30px',\n\n      border: state.isFocused ? '1px solid #08AA83' : '1px solid #26262626',\n      boxShadow: state.isFocused ? '0 0 0 1px #08AA83' : 'none',\n      '&:hover': {\n        border: '1px solid #08AA83',\n      },\n    }),\n\n    option: (provided, state) => ({\n      ...provided,\n    \n      borderRadius: '15px',\n      border: 'none',\n      padding: '0 12px',\n      fontFamily: 'Manrope',\n      fontSize: '14px',\n      fontWeight: '500',\n      lineHeight: '1.29',\n      letterSpacing: '-0.03em',\n      color: state.isSelected ? '#fff' : '#26262699',\n      backgroundColor: state.isSelected ? '#262626' : '#fff',\n      '&:hover': {\n        color: '#262626',\n      },\n    }),\n\n  };\n  \n\n    // const navigator = useNavigate(); \n    const [selectedSex, setSelectedSex] = useState('');\n    const [speciesOptions, setSpeciesOptions] = useState([]);\n\n    const { register, handleSubmit, setValue, formState: { errors, touchedFields }, reset } = useForm({\n        resolver: yupResolver(SignupSchema),\n        mode: 'onBlur',\n      });\n\n\n    // const {\n    //     register,\n    //     handleSubmit,\n    //     reset,\n    //     formState: { isSubmitting, errors, touchedFields },\n    //   } = useForm({\n    //       resolver: yupResolver(SignupSchema)\n    //   });\n\n  \n    const onSubmit = async (data, e) => {\n        // const {  } = data;\n        e.preventDefault();\n        try {\n            // await dispatch(logIn({ email, password }));\n            // navigator('/profile');\n            reset();\n        } catch (errors) {\n            // navigator('/profile');\n        }\n    };\n\n    const handleSexChange = (value) => {\n        setSelectedSex(value);\n        setValue('sex', value);\n      };\n\n      const getIcon = (sex, selected) => {\n        const iconMap = {\n          female: selected ? 'icon-female-1' : 'icon-female',\n          male: selected ? 'icon-male-1' : 'icon-male',\n          multiple: selected ? 'icon-multiple-1' : 'icon-multiple',\n        };\n        return iconMap[sex];\n      };\n\n      useEffect(() => {\n        // Simulate fetching species options from the backen\n        \n        const fetchSpeciesOptions = async () => {\n          const response = await axios.get('/notices/species');\n          setSpeciesOptions(response.data);\n        };\n    \n        fetchSpeciesOptions();\n      }, []);\n\n      const isspeciesOptions = speciesOptions.map(option => ({\n        value: nanoid(),\n        label: `${option}`\n      }));\n\n    return(\n        <>\n            <PetBlock \n                      imgDesctop1={DogAddDesctop1}\n                      imgDesctop2={DogAddDesctop2}\n                      imgDesctop3={DogAddDesctop3}\n                      imgTablet1={DogAddTablet1}\n                      imgTablet2={DogAddTablet2}\n                      imgTablet3={DogAddTablet3}\n                      imgMobile1={DogAddMobile1} \n                      imgMobile2={DogAddMobile2} \n                      imgMobile3={DogAddMobile3}\n                      />\n             \n            <ContainerForm onSubmit={handleSubmit(onSubmit)}>\n                <Title> Add my pet / \n                        <TitleSpan>Personal details</TitleSpan>\n                </Title>\n\n                <RadioGroup>\n                    <SvgIcon\n                       selected={selectedSex === 'female'}\n                       onClick={() => handleSexChange('female')}>\n                             <use xlinkHref={`${sprite}#${getIcon('female', selectedSex === 'female')}`} />\n                    </SvgIcon>\n\n                    <SvgIcon\n                       selected={selectedSex === 'male'}\n                       onClick={() => handleSexChange('male')}>\n                              <use xlinkHref={`${sprite}#${getIcon('male', selectedSex === 'male')}`} />\n                    </SvgIcon>\n\n                   <SvgIcon\n                       selected={selectedSex === 'multiple'}\n                       onClick={() => handleSexChange('multiple')}>\n                              <use xlinkHref={`${sprite}#${getIcon('multiple', selectedSex === 'multiple')}`} />\n                    </SvgIcon>\n                </RadioGroup>\n      {errors.sex && <Error>{errors.sex.message}</Error>}\n\n                 <ButtonSubmit type='submit'>\n                           <svg width={68} height={68}>\n                               <use xlinkHref={sprite + '#icon-paw'}/>\n                            </svg>               \n                 </ButtonSubmit>\n\n                 <ContainerInput>\n                     <InputWrapper>\n                       <Input id=\"imgUrl\" \n                              placeholder=\"Enter URL\"\n                            //   $isValid={!errors.imgUrl}\n                            $isError={!!errors.imgUrl}\n                            $isSuccess={!errors.imgUrl && touchedFields.imgUrl}\n\n                              {...register('imgUrl', {\n                                required: 'Required',\n                                pattern: {\n                                    value: /^https?:\\/\\/.*\\.(?:png|jpg|jpeg|gif|bmp|webp)$/,\n                                    message: 'Enter a valid imgUrl',\n                                },\n                            })} />\n                       {errors.imgUrl && <Error>{errors.imgUrl.message}</Error>} \n                       {!errors.imgUrl && touchedFields.imgUrl && <SuccessMessage>imgUrl is secure</SuccessMessage>}                    \n                     </InputWrapper>\n\n\n                       <ButtonLoad type='button'>\n                              <ButtonLoadSpan> Upload  photo</ButtonLoadSpan>\n                              <svg width={16} height={16}>\n                                  <use xlinkHref={sprite + '#icon-upload-cloud'}/>\n                              </svg>\n                       </ButtonLoad>\n                 </ContainerInput>\n\n                 <Input id=\"title\" \n                            placeholder=\"Title\"\n                            $isError={!!errors.title}\n                            $isSuccess={!errors.title && touchedFields.title}\n\n                              {...register('title', {\n                                required: 'Required',\n                            })} />\n                       {errors.title && <Error>{errors.title.message}</Error>} \n                       {!errors.title && touchedFields.title && <SuccessMessage>Title is secure</SuccessMessage>} \n\n                  <Input id=\"name\" \n                            placeholder=\"Pet’s Name\"\n                            $isError={!!errors.name}\n                            $isSuccess={!errors.name && touchedFields.name}\n\n                              {...register('name', {\n                                required: 'Required',\n                            })} />\n                       {errors.name && <Error>{errors.name.message}</Error>} \n                       {!errors.name && touchedFields.name && <SuccessMessage>Name is secure</SuccessMessage>} \n\n                <ContainerInput>\n                <WrapperSelect>\n                  <Input id=\"birthday\" \n                         placeholder=\"00.00.0000\" \n                         $isError={!!errors.birthday}\n                         $isSuccess={!errors.birthday && touchedFields.birthday}\n\n                         {...register('birthday',{\n                          required: 'Required',\n                        })} />\n                      {errors.birthday && <Error>{errors.birthday.message}</Error>}\n                      {!errors.birthday && touchedFields.birthday && <SuccessMessage>Birthday is secure</SuccessMessage>} \n\n                    <SvgCalendar width={18} height={18}>\n                           <use xlinkHref={sprite + '#icon-calendar'}/> \n                    </SvgCalendar>\n                </WrapperSelect>\n\n                 <WrapperSelect>\n                        <Select id=\"species\"\n                                styles={customStyles}\n                                placeholder=\"Type of pet\"\n                                isClearable\n                                options={isspeciesOptions}\n                               {...register('species', { required: 'Required' })}\n                               onChange={value => setValue('species', value?.value || '')}\n                        />\n                  {errors.species && <Error>{errors.species.message}</Error>}\n</WrapperSelect>\n\n\n                  </ContainerInput>\n\n                  <WrapperButton>\n                    <Button type='button'>Back</Button>\n                    <Button type='submit'>Submit</Button>\n                  </WrapperButton>\n\n            </ContainerForm> \n\n        </>\n    )\n}","import styled from \"styled-components\";\n\nexport const Img = styled.img` \nmargin-bottom : ${p=>p.theme.spacing(14)};\nborder-radius: 55px;\nobject-fit: cover;\n\n@media (min-width: 768px) {\n    border-radius: 90px;\n}\n`\n","// import DogMobile1 from '../../images/DogMobile1.jpg';\n// import DogMobile2 from '../../images/DogMobile2.jpg';\n// import DogMobile3 from '../../images/DogMobile3.jpg';\n// import DogTablet1 from '../../images/DogTablet1.jpg';\n// import DogTablet2 from '../../images/DogTablet2.jpg';\n// import DogTablet3 from '../../images/DogTablet3.jpg';\n// import DogDesktop1 from '../../images/DogDesktop1.jpg';\n// import DogDesktop2 from '../../images/DogDesktop2.jpg';\n// import DogDesktop3 from '../../images/DogDesktop3.jpg';\nimport {Img} from './PetBlock.styled';\n\nexport const PetBlock = ({imgDesctop1, imgDesctop2, imgDesctop3,\n                          imgTablet1, imgTablet2, imgTablet3,\n                          imgMobile1, imgMobile2, imgMobile3}\n )=>{\n    return (\n        <picture>\n            <source\n            media=\"(min-width: 1280px)\"\n            srcSet={`\n                ${imgDesctop1} 1x,\n                ${imgDesctop2} 2x,\n                ${imgDesctop3} 3x\n                `}\n            />\n            <source\n            media=\"(min-width: 768px)\"\n            srcSet={`\n                ${imgTablet1} 1x,\n                ${imgTablet2} 2x,\n                ${imgTablet3} 3x\n                `}\n            />\n            <source\n             media=\"(min-width: 375px)\"\n            //  sizes=\"(min-width: 375px) 100vw, 335px\"\n             srcSet={`\n               ${imgMobile1} 1x,\n               ${imgMobile2} 2x,\n               ${imgMobile3} 3x\n               `}\n            />\n            <source\n             media=\"(min-width: 320px)\"\n            //  sizes=\"(min-width: 320px) 100vw, 320px\"\n             srcSet={`\n               ${imgMobile1} 1x,\n               ${imgMobile2} 2x,\n               ${imgMobile3} 3x\n               `}\n            />\n            <Img alt=\"dog\"\n                src={imgMobile1} \n                srcSet={`\n                ${imgMobile1} 1x,\n                ${imgMobile2} 2x,\n                ${imgMobile3} 3x\n                      `}\n                style={{ width: '100%', height: 'auto' }}/>\n\n        </picture>\n    )\n}"],"names":["ContainerForm","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","Title","_templateObject2","TitleSpan","_templateObject3","RadioGroup","_templateObject4","SvgIcon","_templateObject5","Error","_templateObject6","ButtonSubmit","_templateObject7","ContainerInput","_templateObject8","InputWrapper","_templateObject9","Input","_templateObject10","colors","yellow","ButtonLoad","_templateObject11","ButtonLoadSpan","_templateObject12","SuccessMessage","_templateObject13","WrapperSelect","_templateObject14","SvgCalendar","_templateObject15","WrapperButton","_templateObject16","Button","_templateObject17","white","SignupSchema","Yup","shape","title","required","name","species","sex","birthday","matches","imgUrl","AddPet","customStyles","placeholder","provided","_objectSpread","color","control","state","borderRadius","border","isFocused","boxShadow","option","padding","fontFamily","fontSize","fontWeight","lineHeight","letterSpacing","isSelected","backgroundColor","_useState","useState","_useState2","_slicedToArray","selectedSex","setSelectedSex","_useState3","_useState4","speciesOptions","setSpeciesOptions","_useForm","useForm","resolver","yupResolver","mode","register","handleSubmit","setValue","_useForm$formState","formState","errors","touchedFields","reset","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","e","_context","prev","next","preventDefault","stop","_x","_x2","apply","arguments","handleSexChange","value","getIcon","selected","female","male","multiple","useEffect","fetchSpeciesOptions","_ref2","_callee2","response","_context2","axios","sent","isspeciesOptions","map","nanoid","label","concat","_jsxs","_Fragment","children","_jsx","PetBlock","imgDesctop1","DogAddDesctop1","imgDesctop2","DogAddDesctop2","imgDesctop3","DogAddDesctop3","imgTablet1","DogAddTablet1","imgTablet2","DogAddTablet2","imgTablet3","DogAddTablet3","imgMobile1","imgMobile2","DogAddMobile2","imgMobile3","DogAddMobile3","onClick","xlinkHref","sprite","message","type","width","height","id","$isError","$isSuccess","pattern","Select","styles","isClearable","options","onChange","Img","media","srcSet","alt","src","style"],"sourceRoot":""}